{"version":3,"file":"code.js","sourceRoot":"","sources":["../js/AS.ts","../js/Session.ts","../js/EntityStore.ts","../js/TemplateService.ts","../js/RenderHost.ts","../js/Main.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,aAAoB,MAAgB,EAAE,IAAY;QAC9C,EAAE,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAPD,kBAOC;IAED,kBAAyB,MAAgB,EAAE,IAAY,EAAE,KAAU;QAC/D,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;IAFD,4BAEC;IAED,qBAA4B,MAAgB,EAAE,IAAY,EAAE,MAAa;QACrE,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/B,GAAG,CAAA,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC;YAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;QACrE,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAJD,kCAIC;IAED,aAAoB,MAAgB,EAAE,IAAY,EAAE,KAAU;QAC1D,EAAE,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACzB,CAAC;IAPD,kBAOC;IAED,eAAsB,MAAgB,EAAE,IAAY;QAChD,EAAE,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;YAAC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAFD,sBAEC;IAED;KAGC;IAHD,4BAGC;;;;;ICjCD,iBAAiB,GAAW;QACxB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACxC,8BAA8B;QAC9B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;QACf,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC;IAC/C,CAAC;IAGD;QACI;QAEA,CAAC;QASY,GAAG,CAAC,KAAa,EAAE,IAAY;;gBACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACzD,EAAE,CAAC,CAAC,WAAW,IAAI,QAAQ,CAAC,CAAC,CAAC;oBAC1B,MAAM,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;oBACxC,EAAE,CAAC,CAAC,UAAU,IAAI,SAAS,CAAC;wBAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;oBACpE,EAAE,CAAC,CAAC,aAAa,IAAI,SAAS,CAAC;wBAAC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;gBACjF,CAAC;YACL,CAAC;SAAA;QAEM,SAAS,CAAC,KAAuB,EAAE,IAAkB;YACxD,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACvC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAClD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,mGAAmG,CAAC,CAAC;YACnI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC;QAEY,SAAS,CAAC,GAAW;;gBAC9B,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC5D,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;oBACpC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;oBACxB,IAAI,WAAW,GAAgB;wBAC3B,IAAI,EAAE,KAAK;qBACd,CAAC;oBAEF,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC5E,CAAC;gBAED,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACpD,CAAC;SAAA;KACJ;IA9CD,0BA8CC;;;;;ICjDD;QAAA;YACW,UAAK,GAAoC,EAAE,CAAC;QAMvD,CAAC;QAJU,YAAY,CAAC,EAAU,EAAE,OAAsB;YAClD,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;gBAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;KACJ;IAPD,gDAOC;IAED;QAII,YAAoB,OAAgB;YAAhB,YAAO,GAAP,OAAO,CAAS;YAH5B,cAAS,GAAoC,EAAE,CAAC;YAChD,WAAM,GAA6B,EAAE,CAAC;QAEP,CAAC;QAEhC,aAAa,CAAC,EAAU,EAAE,OAAsB;YACpD,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;gBAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QAEO,kBAAkB,CAAC,EAAU,EAAE,OAAsB;YACzD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC;QAEM,QAAQ,CAAC,QAAuC,EAAE,QAA6B;YAClF,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;gBAAC,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAC;YAC1D,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,CAAC;YAED,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QAEM,UAAU,CAAC,OAA2B;YACzC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3B,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBAC/B,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC1C,CAAC;YAED,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;QACvB,CAAC;QAEO,WAAW,CAAC,EAAU,EAAE,GAAa;YACzC,IAAI,IAAI,GAAa,SAAS,CAAA;YAC9B,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC;gBAClB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAEtB,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC;gBACrB,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBACnC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,eAAe,CAAC,CAAC;QAClF,CAAC;QAEa,YAAY,CAAC,GAAW,EAAE,QAA4E;;gBAChH,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC;oBACD,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;oBACjD,IAAI,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACjC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC3B,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACzB,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACT,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACtB,CAAC;YACL,CAAC;SAAA;QAEY,GAAG,CAAC,EAAU,EAAE,QAAiB,IAAI;;gBAC9C,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;oBAC3B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAE3B,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,eAAe,EAAE,CAAC;gBAE7C,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBAC5C,IAAI,SAAS,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAW,CAAQ,CAAC;gBAElE,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBACvC,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC3B,CAAC;SAAA;KACJ;IAzED,kCAyEC;;;;;ICtFD;KAIC;IAJD,oCAIC;IAID;QAGI;YACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjD,CAAC;QAEa,aAAa;;gBACvB,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,0CAA0C,CAAC,CAAC;gBACvE,MAAM,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YAC/B,CAAC;SAAA;QAEM,YAAY;YACf,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;KACJ;IAfD,0CAeC;IAED;QAAA;YAEW,YAAO,GAAa,EAAE,CAAC;QAClC,CAAC;KAAA;IAHD,oCAGC;IAED;QACI,YAA2B,eAAgC,EAAU,WAAwB;YAAlE,oBAAe,GAAf,eAAe,CAAiB;YAAU,gBAAW,GAAX,WAAW,CAAa;QAE7F,CAAC;QAEO,eAAe,CAAC,MAAmB,EAAE,IAAY;YACrD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,IAAI,IAAI,aAAa,CAAC;oBAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC;gBACpD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,eAAe,CAAC;oBAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC,CAAC;gBAC7G,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,mBAAmB,CAAC;oBAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,gBAAgB,EAAE,uBAAuB,CAAC,CAAC,CAAC;gBACzH,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxE,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;oBAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvE,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAErC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,KAAK,IAAI;oBACL,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACpC,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEa,aAAa,CAAC,MAAmB,EAAE,OAAe,EAAE,YAA0B;;gBAExF,IAAI,MAAM,GAAQ,IAAI,CAAC;gBACvB,IAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CACxB,CAAC;wBACG,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;4BAAC,QAAQ,CAAC;wBAC9B,MAAM,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC9B,IAAI,OAAO,GAAG,EAAE,CAAC;wBACjB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;4BACpC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gCAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC1F,IAAI;gCAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC5B,CAAC;wBAED,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;4BAAC,MAAM,GAAG,IAAI,CAAC;wBACvC,IAAI;4BAAC,MAAM,GAAG,OAAO,CAAC;oBAC1B,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;4BAAC,QAAQ,CAAC;wBAC9B,IAAI,EAAE,GAAW,IAAI,CAAC;wBACtB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;4BACtB,EAAE,GAAG,MAAM,CAAC,CAAC,CAAW,CAAC;wBAC7B,IAAI;4BAAC,EAAE,GAAG,MAAgB,CAAC;wBAE3B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;wBAC9C,MAAM,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC9B,IAAI,OAAO,GAAG,EAAE,CAAC;wBACjB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;4BACpC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gCAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC1F,IAAI;gCAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC5B,CAAC;wBAED,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;4BAAC,MAAM,GAAG,IAAI,CAAC;wBACvC,IAAI;4BAAC,MAAM,GAAG,OAAO,CAAC;oBAC1B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;4BAAC,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACnD,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC;wBACzB,MAAM,GAAG,IAAI,CAAC;oBAClB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACnC,MAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAClC,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC;4BAAC,MAAM,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;wBACjF,IAAI,EAAE,GAAW,IAAI,CAAC;wBACtB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;4BACtB,EAAE,GAAG,MAAM,CAAC,CAAC,CAAW,CAAC;wBAC7B,IAAI;4BAAC,EAAE,GAAG,MAAgB,CAAC;wBAE3B,MAAM,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;oBAC1D,CAAC;gBACL,CAAC;gBAED,IAAI,IAAY,CAAC;gBACjB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACvD,IAAI;oBAAC,IAAI,GAAG,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAEpD,EAAE,CAAC,CAAC,MAAM,CAAC;oBAAC,MAAM,CAAC,IAAI,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC5D,CAAC;SAAA;QAEa,OAAO,CAAC,QAAgB,EAAE,MAAc,EAAE,YAA0B;;gBAC9E,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC;oBAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;gBAE5D,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAElC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAClD,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACjE,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChB,KAAK,MAAM;4BACP,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;4BACpB,KAAK,CAAC;wBACV,KAAK,IAAI,CAAC;wBACV,KAAK,OAAO;4BACR,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;4BACxG,KAAK,CAAC;wBACV,KAAK,MAAM;4BACP,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;4BACpB,KAAK,CAAC;wBACV,KAAK,KAAK;4BACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC;gCAClC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;4BACxB,KAAK,CAAC;wBACV,KAAK,SAAS;4BACV,MAAM,IAAI,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;4BACpE,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBACD,MAAM,CAAC,MAAM,CAAC;YAClB,CAAC;SAAA;QAEY,MAAM,CAAC,QAAgB,EAAE,MAAc;;gBAEhD,IAAI,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;gBACtC,YAAY,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;gBAEzE,MAAM,CAAC,YAAY,CAAC;YACxB,CAAC;SAAA;KACJ;IA9HD,4CA8HC;;;;;IC3JD;QAaI,YAAoB,QAA0B,EAAU,KAAkB,EAAE,EAAU,EAAE,QAAgB;YAApF,aAAQ,GAAR,QAAQ,CAAkB;YAAU,UAAK,GAAL,KAAK,CAAa;YACtE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QAXD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5C,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAEjE,IAAW,QAAQ,KAAa,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACxD,IAAW,QAAQ,CAAC,KAAa,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAS7E,IAAW,OAAO,KAAqB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAElD,SAAS,CAAC,GAAa,EAAE,SAAmB;YAChD,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QAEa,MAAM;;gBAChB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpE,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;gBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC;oBACjC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAEpD,MAAM,QAAQ,GAAuE,EAAE,CAAC;gBACxF,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,OAAO,CAAC;oBAC1B,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBAElC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC9B,CAAC;SAAA;KACJ;IAvCD,gCAuCC;;;;;ICtCD;;YACI,IAAI,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;YAC5B,MAAM,OAAO,CAAC,GAAG,CAAC,kVAAkV,EAAE,wCAAwC,CAAC,CAAC;YAChZ,IAAI,WAAW,GAAG,IAAI,yBAAW,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,QAAQ,GAAG,IAAI,kCAAgB,CAAC,IAAI,iCAAe,EAAE,EAAE,WAAW,CAAC,CAAC;YACxE,IAAI,UAAU,GAAG,IAAI,uBAAU,CAAC,QAAQ,EAAE,WAAW,EAAE,wCAAwC,EAAE,QAAQ,CAAC,CAAC;YAC3G,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC;KAAA;IAPD,wBAOC;IAED,MAAM,EAAE,CAAC","sourcesContent":["export function get(object: ASObject, name: string): any[] {\n    if (name in object) {\n        if (Array.isArray(object[name])) return object[name];\n        return [object[name]];\n    }\n\n    return [];\n}\n\nexport function contains(object: ASObject, name: string, value: any): boolean {\n    return get(object, name).indexOf(value) != -1;\n}\n\nexport function containsAny(object: ASObject, name: string, values: any[]): boolean {\n    const data = get(object, name);\n    for(let value of values) if (data.indexOf(values) != -1) return true;\n    return false;\n}\n\nexport function set(object: ASObject, name: string, value: any) {\n    if (name in object) {\n        if (Array.isArray(object[name])) object[name].push(value);\n        object[name] = [object[name], value];\n    }\n\n    object[name] = value;\n}\n\nexport function clear(object: ASObject, name: string) {\n    if (name in object) delete object[name];\n}\n\nexport class ASObject {\n    public id: string;\n    [name: string]: any;\n}","import { ASObject } from \"./AS\";\n\nfunction getHost(url: string) {\n    const obj = document.createElement('a');\n    // Let the browser do the work\n    obj.href = url;\n    return obj.protocol + \"://\" + obj.hostname;\n}\n\n\nexport class Session {\n    constructor() {\n\n    }\n\n    private _token: string;\n    private _user: string;\n    private _host: string;\n\n    private _proxyUrl: string;\n    private _uploadMedia: string;\n\n    public async set(token: string, user: string): Promise<void> {\n        this._token = token;\n        this._user = user;\n        this._host = getHost(this._user);\n\n        let userData = await (await this.authFetch(user)).json();\n        if (\"endpoints\" in userData) {\n            const endpoints = userData[\"endpoints\"];\n            if (\"proxyUrl\" in endpoints) this._proxyUrl = endpoints[\"proxyUrl\"];\n            if (\"uploadMedia\" in endpoints) this._uploadMedia = endpoints[\"uploadMedia\"];\n        }\n    }\n\n    public authFetch(input: string | Request, init?: RequestInit): Promise<Response> {\n        let request = new Request(input, init);\n        request.headers.set(\"Authorization\", this._token);\n        request.headers.set(\"Accept\", \"application/ld+json; profile=\\\"https://www.w3.org/ns/activitystreams\\\", application/activity+json\");\n        return fetch(request);\n    }\n\n    public async getObject(url: string): Promise<ASObject> {\n        const requestHost = getHost(url);\n        if (requestHost != this._host && this._proxyUrl !== undefined) {\n            const parms = new URLSearchParams();\n            parms.append(\"id\", url);\n            let requestInit: RequestInit = {\n                body: parms\n            };\n\n            return await (await this.authFetch(this._proxyUrl, requestInit)).json();\n        }\n\n        return await (await this.authFetch(url)).json();\n    }\n}","import { Session } from \"./Session\";\nimport { ASObject } from \"./AS\";\nimport * as jsonld from \"jsonld\";\n\n\nexport type ChangeHandler = (oldValue: ASObject, newValue: ASObject) => void;\n\nexport class StoreActivityToken {\n    public items: {[id: string]: ChangeHandler[]} = {};\n\n    public addToHandler(id: string, handler: ChangeHandler) {\n        if (!(id in this.items)) this.items[id] = [];\n        this.items[id].push(handler);\n    }\n}\n\nexport class EntityStore {\n    private _handlers: {[id: string]: ChangeHandler[]} = {};\n    private _cache: {[id: string]: ASObject} = {};\n\n    constructor(private session: Session) {}\n\n    private _addToHandler(id: string, handler: ChangeHandler) {\n        if (!(id in this._handlers)) this._handlers[id] = [];\n        this._handlers[id].push(handler);\n    }\n\n    private _removeFromHandler(id: string, handler: ChangeHandler) {\n        this._handlers[id].splice(this._handlers[id].indexOf(handler), 1);\n    }\n    \n    public register(handlers: {[id: string]: ChangeHandler}, existing?: StoreActivityToken): StoreActivityToken {\n        if (existing == null) existing = new StoreActivityToken();\n        for (let id in handlers) {\n            this._addToHandler(id, handlers[id]);\n            existing.addToHandler(id, handlers[id]);\n        }\n\n        return existing;\n    }\n\n    public deregister(handler: StoreActivityToken) {\n        for (let id in handler.items) {\n            for (let item of handler.items[id])\n                this._removeFromHandler(id, item);\n        }\n\n        handler.items = {};\n    }\n\n    private _addToCache(id: string, obj: ASObject) {\n        let prev: ASObject = undefined\n        if (id in this._cache)\n            prev = this._cache[id];\n\n        this._cache[id] = obj;\n\n        if (id in this._handlers)\n            for (let handler of this._handlers[id])\n                handler(prev, obj);\n        console.log(`Cached ${id} - ${Object.keys(this._cache).length} items cached`);\n    }\n\n    private async loadDocument(url: string, callback: (err: Error | null, documentObject: jsonld.DocumentObject) => void) {\n        console.log(\"Loading ...\", url);\n        try {\n            let response = await this.session.authFetch(url);\n            let data = await response.json();\n            console.log(\"Callbacking\");\n            callback(null, data);\n        } catch (e) {\n            callback(e, null);\n        }\n    }\n\n    public async get(id: string, cache: boolean = true): Promise<ASObject> {\n        if (id in this._cache && cache)\n            return this._cache[id];\n\n        let processor = new jsonld.JsonLdProcessor();\n\n        let data = await this.session.getObject(id);\n        let flattened = await processor.flatten(data, data as any) as any;\n\n        for (let item of flattened[\"@graph\"]) {\n            this._addToCache(item[\"id\"], item);\n        }\n        return this._cache[id];\n    }\n}","import { EntityStore } from \"./EntityStore\";\nimport * as AS from \"./AS\";\n\nexport class TemplateItem {\n    public type: \"command\" | \"if\" | \"while\" | \"else\" | \"jump\" | \"end\" | \"text\";\n    public data: string;\n    public offset: number;\n}\n\nexport type Template = TemplateItem[];\n\nexport class TemplateService {\n    private _templatePromise: Promise<{[item: string]: Template}>\n\n    constructor() {\n        this._templatePromise = this._getTemplates();\n    }\n\n    private async _getTemplates(): Promise<{[item: string]: Template}> {\n        const result = await fetch(\"http://localhost:5000/settings/templates\");\n        return await result.json();\n    }\n\n    public getTemplates(): Promise<{[item: string]: Template}> {\n        return this._templatePromise;\n    }\n}\n\nexport class RenderResult {\n    public result: string;\n    public usedIds: string[] = [];\n}\n\nexport class TemplateRenderer {\n    public constructor(private templateService: TemplateService, private entityStore: EntityStore) {\n\n    }\n\n    private _parseCondition(object: AS.ASObject, text: string): boolean {\n        const split = text.split(' ');\n        if (split.length == 2) {\n            if (text == \"is Activity\") return \"actor\" in object;\n            else if (text == \"is Collection\") return AS.containsAny(object, \"type\", [\"Collection\", \"OrderedCollection\"]);\n            else if (text == \"is CollectionPage\") return AS.containsAny(object, \"type\", [\"CollectionPage\", \"OrderedCollectionPage\"]);\n            else if (split[0] == \"is\") return AS.contains(object, \"type\", split[1]);\n            else if (split[0] == \"has\") return AS.get(object, split[1]).length > 0;\n            return false;\n        }\n\n        const value = split[0];\n        const arr = AS.get(object, split[2]);\n\n        switch (split[1]) {\n        case \"in\":\n            return arr.indexOf(value) != -1;\n        }\n\n        return false;\n    }\n\n    private async _parseCommand(object: AS.ASObject, command: string, renderResult: RenderResult): Promise<string>\n    {\n        let result: any = null;\n        let isHtml = false;\n        for (let asf of command.split(' ')) {\n            if (asf.startsWith(\"$\"))\n            {\n                if (result !== null) continue;\n                const name = asf.substring(1);\n                let results = [];\n                for (let item of AS.get(object, name)) {\n                    if ((typeof item) == \"object\" && !Array.isArray(item)) results.push(JSON.stringify(item));\n                    else results.push(item);\n                }\n\n                if (results.length == 0) result = null;\n                else result = results;\n            }\n            else if (asf.startsWith(\"%\")) {\n                if (result === null) continue;\n                let id: string = null;\n                if (Array.isArray(result))\n                    id = result[0] as string;\n                else id = result as string;\n\n                const entity = await this.entityStore.get(id);\n                const name = asf.substring(1);\n                let results = [];\n                for (let item of AS.get(entity, name)) {\n                    if ((typeof item) == \"object\" && !Array.isArray(item)) results.push(JSON.stringify(item));\n                    else results.push(item);\n                }\n\n                if (results.length == 0) result = null;\n                else result = results;\n            } else if (asf.startsWith(\"'\")) {\n                if (result === null) result = asf.substring(1);\n            } else if (asf == \"ishtml\") {\n                isHtml = true;\n            } else if (asf.startsWith(\"render:\")) {\n                const template = asf.substring(7);\n                if (result == null) return await this._render(template, object.id, renderResult);\n                let id: string = null;\n                if (Array.isArray(result))\n                    id = result[0] as string;\n                else id = result as string;\n\n                return await this._render(template, id, renderResult);\n            }\n        }\n\n        let text: string;\n        if (Array.isArray(result)) text = result[0].toString();\n        else text = result == null ? \"\" : result.toString();\n\n        if (isHtml) return text;\n        return text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    \n    private async _render(template: string, mainId: string, renderResult: RenderResult): Promise<string> {\n        if (renderResult == null) renderResult = new RenderResult();\n\n        renderResult.usedIds.push(mainId);\n\n        const object = await this.entityStore.get(mainId);\n        let temp = (await this.templateService.getTemplates())[template];\n        let result = \"\";\n        for (let i = 0; i < temp.length; i++) {\n            const item = temp[i];\n            switch (item.type) {\n                case \"text\":\n                    result += item.data;\n                    break;\n                case \"if\":\n                case \"while\":\n                    if (!this._parseCondition(object, item.data.substring(item.data.indexOf(' ') + 1))) i = item.offset - 1;\n                    break;\n                case \"jump\":\n                    i = item.offset - 1;\n                    break;\n                case \"end\":\n                    if (temp[item.offset].type == \"while\")\n                        i = item.offset - 1;\n                    break;\n                case \"command\":\n                    result += await this._parseCommand(object, item.data, renderResult);\n                    break;\n            }\n        }\n        return result;\n    }\n\n    public async render(template: string, mainId: string): Promise<RenderResult>\n    {\n        let renderResult = new RenderResult();\n        renderResult.result = await this._render(template, mainId, renderResult);\n\n        return renderResult;\n    }\n}","import { TemplateRenderer, TemplateService, RenderResult } from \"./TemplateService\";\nimport { EntityStore, StoreActivityToken } from \"./EntityStore\";\nimport { ASObject } from \"./AS\";\n\nexport class RenderHost {\n    private _lastResult: RenderResult;\n    private _id: string;\n    private _template: string;\n    private _dom: HTMLDivElement;\n    private _storeActivityToken: StoreActivityToken;\n\n    public get id(): string { return this._id; }\n    public set id(value: string) { this._id = value; this.render(); }\n\n    public get template(): string { return this._template; }\n    public set template(value: string) { this._template = value; this.render(); }\n\n    constructor(private renderer: TemplateRenderer, private store: EntityStore, id: string, template: string) {\n        this._dom = document.createElement(\"div\");\n        this._id = id;\n        this._template = template;\n        this.render();\n    }\n\n    public get element(): HTMLDivElement { return this._dom; }\n\n    private _reupdate(old: ASObject, newObject: ASObject) {\n        this.render();\n    }\n\n    private async render(): Promise<void> {\n        const result = await this.renderer.render(this._template, this._id);\n        this._dom.innerHTML = result.result;\n        if (this._storeActivityToken != null)\n            this.store.deregister(this._storeActivityToken);\n\n        const handlers: {[name: string]: (oldValue: ASObject, newValue: ASObject) => void} = {};\n        for (let id of result.usedIds)\n            handlers[id] = this._reupdate;\n\n        this._storeActivityToken = this.store.register(handlers);\n        this._lastResult = result;\n    }\n}","import { Session } from \"./Session\";\nimport { TemplateService, TemplateRenderer } from \"./TemplateService\";\nimport { EntityStore } from \"./EntityStore\";\nimport { RenderHost } from \"./RenderHost\";\n\nexport async function things() {\n    let session = new Session();\n    await session.set(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmMWU0OTYzMi1iYWRhLTQyMWYtYjY3Ny1iMmI1ZTU1ZGE3MTAiLCJhY3RvciI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC91c2Vycy9wdWNraXBlZGlhIiwibmJmIjoxNTA1NDAzNDA2LCJleHAiOjE1MDc5OTU0MDYsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC8iLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjUwMDAvIn0.253Y2hyR9mMoeNETLvDhNmtoUaBFZ6lVJGgrleHPWzQ\", \"http://localhost:5000/users/puckipedia\");\n    let entityStore = new EntityStore(session);\n    let renderer = new TemplateRenderer(new TemplateService(), entityStore);\n    let renderHost = new RenderHost(renderer, entityStore, \"http://localhost:5000/users/puckipedia\", \"object\");\n    document.body.appendChild(renderHost.element);\n}\n\nthings();\n"]}